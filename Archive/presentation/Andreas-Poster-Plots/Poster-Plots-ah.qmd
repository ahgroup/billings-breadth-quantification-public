---
title: "Poster figures"
format: html
---

```{r}
# turned off renv
# loading packages the usual way
library(ggplot2)
library(readr)
library(tidyr)
library(dplyr)
library(patchwork)
```


```{r, eval = FALSE, include = FALSE}
#| label: setup
#| include: false
# So renv will do its job correctly
box::use(
	readr,
	tidyr,
	dplyr,
	ggplot2,
	patchwork[...],
  cmdstanr[...],
	rstan[...]
)
```


```{r}
get_fn <- function(home = here::here(), dir, idx, ext = ".Rds") {
	paste0(
		home, "/", dir, "/Model",
		stringr::str_pad(idx, width = 2, side = "left", pad = "0"), ext
	)
}

get_rstan_diagnostics <- function(fit, fn) {
	sink(fn)
	sink(stdout(), type = "message")
	rstan::check_hmc_diagnostics(fit)
	sink()
	sink(stderr(), type = "message")
}

tidy_PI <- function(x, p = 0.89) {
	rethinking::PI(x, prob = p) |>
		setNames(rep(c("upr", "lwr"), times = length(p))) |>
		tibble::enframe()
}

ggplot2::theme_set(
	ggplot2::theme_bw() +
		ggplot2::theme(
			plot.background = ggplot2::element_rect(fill = "white", color = "white"),
			axis.text = ggplot2::element_text(size = 16, color = "black"),
			axis.title = ggplot2::element_text(size = 18),
			plot.subtitle = ggplot2::element_text(
				size = 16, hjust = 0, margin = ggplot2::margin(b = 2)
			),
			plot.title = ggplot2::element_text(
				size = 24, hjust = 0, margin = ggplot2::margin(b = 4)
			),
			plot.caption = ggplot2::element_text(size = 14),
			strip.text = ggplot2::element_text(
				size = 16, hjust = 0.5, margin = ggplot2::margin(b = 2, t = 2)
			),
			panel.spacing = ggplot2::unit(2, "lines"),
			legend.position = "bottom",
			legend.text = ggplot2::element_text(size = 16, color = "black"),
			legend.title = ggplot2::element_text(size = 18, color = "black")
		)
)
```

In this script I'll work on the poster figure drafts since we decided that
we definitely do need the individual regressions (no pooling as opposed to
complete pooling). 

# Data cleaning

```{r data cleaning}
clean_data <-
	readr::read_rds(
		here::here("data", "processed", "distance_data.rds")
	)

this_st <- unique(clean_data$vaccine_fullname)[[2]]

dat <-
	clean_data |>
	dplyr::mutate(
		vaccine_type = stringr::str_remove(vaccine_type, "_vaccine_fullname$") |>
			stringr::str_to_upper() |>
			factor()
	) |>
	dplyr::filter(
		vaccine_type == strain_type,
		# Get only the Ag distance methods that Amanda used.
		method %in% c("cart_2d_post", "p_epi", "year"),
		vaccine_fullname == this_st
	) |>
	dplyr::mutate(
		dplyr::across(tidyselect:::where(is.factor), forcats::fct_drop)
	) |>
	# Remove the columns I know we do not need here
	dplyr::select(
		-c(pretiter, postiter, vac_short, strain_short)
	)

# Pivot the data so we can fit pre/post models at the same time
dat_models <-
	dat |>
	tidyr::pivot_longer(
		cols = c(postvactiter, titerincrease),
		names_to = "outcome",
		values_to = "y"
	) |>
	# Turn the categorical variables into integer indexes, this is required
	# for index coding in stan
	# dplyr::mutate(
	# 	id = uniq_id |>
	# 		factor() |>
	# 		forcats::fct_inorder() |>
	# 		as.integer()
	# ) |>
	# Normalize the antigenic distance measurements within vaccine group
	dplyr::group_by(vaccine_fullname, method) |>
	dplyr::mutate(
		norm_dist = distance / max(distance)
	) |>
	dplyr::ungroup()
```

We decided that we only want to use one season for the purposes of subsampling
so here I am counting which season has the most unique strains.

```{r}
season_counts <-
	dat_models |>
	dplyr::select(season, strains_fullname) |>
	dplyr::distinct() |>
	dplyr::count(season)

season_counts
best_season <-
	season_counts |>
	dplyr::slice_max(n) |>
	dplyr::pull(season)
```

OK, it looks like we will just use the 2016 data.

```{r}
dat_models2 <-
	dat_models |>
	dplyr::filter(season == best_season) |>
	dplyr::select(
		-season,
		-strain_type,
		-vaccine_type,
		-vaccine_fullname
	)

dat_models2 |>
	dplyr::select(uniq_id, strains_fullname, dose) |>
	dplyr::distinct() |>
	dplyr::count(strains_fullname, dose)
```

We have 255 people who all seem to have complete measurements for the entire
historical panel of strains in 2016. So that is plenty for us to
subsample from.

We won't be using Stan in this script but I left the nesting part in
here just in case.

```{r}
# We want to fit a model for every unique combination of:
# vaccine strain; outcome; distance method.
# (Models will be fitted ACROSS seasons, not per-season.)
# We'll do this by nesting the data into strata to get a per-stratum
# data frame and then mapping the model fitting function over the
# nested data frames.
dat_nested <-
	dat_models2 |>
	# Select only the data we need RIGHT NOW to prevent Stan from throwing a fit,
	# it will often get angry over unused data that is in the wrong format.
	dplyr::select(
		# Variables that should go into the Stan model. These DO need to be
		# processed to be NUMERIC.
		id = uniq_id, y, x = norm_dist, p = prevactiter, d2 = distance,
		# Stratum/nesting variables -- these do NOT need to be processed.
		method, outcome, dose,
		# Strain name variable to filter on later.
		s = strains_fullname
	) |>
	# Cleaning up the factor variables that have to become indices
	# it has to be done in groups to ensure there are no missing levels!
	dplyr::group_by(dplyr::across(!c(id, x, y, s, p, d2))) |>
	dplyr::mutate(
		id = id |> factor() |> forcats::fct_inorder() |> as.integer()
	) |>
	dplyr::ungroup() |>
	# This line creates the stratified data frames. Analogous to base R split()
	# but organized better.
	tidyr::nest(dat = c(id, x, y, s, p, d2)) |>
	# TODO EVENTUALLY DO THIS FOR ALL OUTCOMES
	dplyr::filter(outcome == "titerincrease") |>
	dplyr::select(-outcome)
```

# Raw data and outcomes plot

I already made the data for this plot in the other script, so I just saved
it and moved everything to here.

```{r}
p1data <- readr::read_rds(here::here("Andreas-Poster-Plots/p1data.Rds"))
dat_p1 <- p1data[[1]] 
plt_test <- p1data[[2]] |>
	dplyr::mutate(
				o = factor(outcome,
							 levels = c("prevactiter", "postvactiter", "titerincrease"),
							 labels = c("Pre-vaccination titer",
							 					  "Post-vaccination titer",
							 					  "Titer increase")),
	)
dat_table <- p1data[[3]]

dat_labs <-
	dat_p1 |>
	dplyr::filter(
		strain_short %in% c("CA/09", "NC/99", "SC/18", "HK/14", "Shan/93", "TX/77"),
		vac_short %in% c("CA/09", "HK/14")
	) |>
	dplyr::select(
		strain_type,
		strain_short,
		norm_dist,
		distance,
		method
	) |>
	dplyr::distinct() |>
	dplyr::mutate(
		y = -0.25,
		m = factor(
			method,
			levels = c("year", "p_epi", "cart_2d_post"),
			labels = c(
				"Year difference",
				"p-Epitope sequence distance",
				"Antigenic cartography distance"
			)
		)
	)

dat_stats <-
	dat_table |>
	dplyr::filter(
		strain %in% c("CA/09", "HK/14"),
		outcome == "log2 titer ratio",
		name %in% c("Slope", "Intercept", "AUC (unweighted)")
	) |>
	dplyr::mutate(
		m = factor(
			method,
			levels = c("Year difference",
								 "p-Epitope",
								 "Antigenic cartography"),
			labels = c("Year difference",
								 "p-Epitope sequence distance",
								 "Antigenic cartography distance")
		),
		method = factor(
			m,
			levels = c("Year difference",
								 "p-Epitope sequence distance",
								 "Antigenic cartography distance"),
			labels = c("year", "p_epi", "cart_2d_post")
		),
		n = factor(
			name,
			levels = c("Intercept", "Slope", "AUC (unweighted)"),
			labels = c("Strength", "Breadth", "Total"),
			ordered = TRUE
		)
	) |>
	dplyr::select(strain, method, m, n, est) |>
	dplyr::arrange(strain, m, n) |>
	dplyr::mutate(
		lab = paste0(n, ": ", sprintf("%.2f", est)),
		.keep = "unused"
	) |>
	dplyr::group_by(strain, m, method) |>
	dplyr::summarise(
		lab = paste(lab, collapse = "\n"),
		x = 0.85,
		y = 8.25,
		.groups = "drop"
	)

p1 <- list()

for (i in c("year", "p_epi", "cart_2d_post")) {
	
	dat <-dat_p1 |>
		dplyr::filter(
			method == i, vaccine_fullname == "H1N1-California-2009"
		)
	
	dat2 <-
		plt_test |>
		dplyr::filter(
			method == i, vaccine_fullname == "H1N1-California-2009"
		)
	
	if( i == "p_epi") {
	sec <-
		ggh4x::help_secondary(
			data =dat ,
			primary = norm_dist,
			secondary = distance,
			name = "Original distance measure"
		)
	} else {
			sec <-
		ggh4x::help_secondary(
			data =dat ,
			primary = norm_dist,
			secondary = distance,
			name = NULL
		)
	}
	
	p1s <-
		dat |>
		dplyr::mutate(
			o = factor(outcome,
								 levels = c("prevactiter", "postvactiter", "titerincrease"),
								 labels = c("Pre-vaccination titer",
								 					 "Post-vaccination titer",
								 					 "Titer increase")),
			m = factor(
				method,
				levels = c("year", "p_epi", "cart_2d_post"),
				labels = c(
					"Year difference",
					"p-Epitope sequence distance",
					"Antigenic cartography distance"
				)
			)
		) |>
		ggplot2::ggplot() +
		ggplot2::aes(x = norm_dist, y = y, color = o) +
		ggplot2::geom_point(
			alpha = 0.1,
			size = 0.5,
			position = ggplot2::position_jitter(width = 0.005, height = 0.35, seed = 370)
		) +
		ggplot2::geom_ribbon(
			data = dat2,
			mapping = ggplot2::aes(
				x = distance, y = est, ymin = est - 0.05, ymax = est + 0.05, group = o
			),
			alpha = 0.25,
			color = "white"
		) +
		ggplot2::geom_line(
			data = dat2,
			mapping = ggplot2::aes(
				x = distance, y = est, color = o
			),
			linewidth = 1.5,
			alpha = 0.85,
			lineend = "round"
		) +
		ggrepel::geom_label_repel(
			data = dat_labs |>
				dplyr::filter(strain_type == 'H1N1', method == i),
			ggplot2::aes(
				x = norm_dist, y = y,
				label = strain_short
			),
			inherit.aes = FALSE,
			min.segment.length = ggplot2::unit(0, 'lines')
		) +
		ggplot2::geom_label(
			data = dat_stats |>
				dplyr::filter(strain == "CA/09", method == i),
			ggplot2::aes(
				x = x, y = y,
				label = lab
			),
			inherit.aes = FALSE,
			alpha = 0.85
		) +
		ggplot2::facet_wrap(ggplot2::vars(m)) +
		ggplot2::scale_color_manual(values = c("#E69F00", "#56B4E9", "black")) +
		ggplot2::scale_x_continuous(
			limits = c(-0.05, 1.05),
			breaks = seq(0, 1, 0.25),
			expand = ggplot2::expansion(0, 0),
			sec.axis = sec
		) +
		ggplot2::scale_y_continuous(
			limits = c(-4, 10.5),
			breaks = c(-5, 0, 5, 10),
			expand = ggplot2::expansion(0, 0)
		) +
		ggplot2::labs(
			x = "",
			y = NULL,
			color = "Outcome",
			#title = "H1N1-California-2009 (n = 773)"
		) +
		ggplot2::guides(
			color = ggplot2::guide_legend(override.aes = list(alpha = 1, size = 3))
		) +
		ggplot2::theme(
			plot.margin = ggplot2::margin(t = 6, r = 8, b = 6, l = 8)
		)
	
	if (i == "p_epi") {
		p1s <- p1s + ggplot2::labs(
			x = "Normalized distance measure"
		)
	}
	
	p1 <- c(p1, list(p1s))
}

full_p1 <-
	purrr::reduce(p1, `+`) +
	patchwork::plot_layout(guides = "collect", ncol = 3)  +
	patchwork::plot_annotation(
		title = "H1N1-California-2009 (n = 773)"
	)&
	ggplot2::theme(legend.position = "bottom")

p2 <- list()

for (i in c("year", "p_epi", "cart_2d_post")) {
	
	dat <-dat_p1 |>
		dplyr::filter(
			method == i, vaccine_fullname == "H3N2-Hong Kong-2014"
		)
	
	dat2 <-
		plt_test |>
		dplyr::filter(
			method == i, vaccine_fullname == "H3N2-Hong Kong-2014"
		)
	
	if( i == "p_epi") {
	sec <-
		ggh4x::help_secondary(
			data =dat ,
			primary = norm_dist,
			secondary = distance,
			name = "Original distance measure"
		)
	} else {
			sec <-
		ggh4x::help_secondary(
			data =dat ,
			primary = norm_dist,
			secondary = distance,
			name = NULL
		)
	}
	
	p2s <-
		dat |>
		dplyr::mutate(
			o = factor(outcome,
								 levels = c("prevactiter", "postvactiter", "titerincrease"),
								 labels = c("Pre-vaccination titer",
								 					 "Post-vaccination titer",
								 					 "Titer increase")),
			m = factor(
				method,
				levels = c("year", "p_epi", "cart_2d_post"),
				labels = c(
					"Year difference",
					"p-Epitope sequence distance",
					"Antigenic cartography distance"
				)
			)
		) |>
		ggplot2::ggplot() +
		ggplot2::aes(x = norm_dist, y = y, color = o) +
		ggplot2::geom_point(
			alpha = 0.1,
			size = 0.5,
			position = ggplot2::position_jitter(width = 0.005, height = 0.35, seed = 370)
		) +
		ggplot2::geom_ribbon(
			data = dat2,
			mapping = ggplot2::aes(
				x = distance, y = est, ymin = est - 0.05, ymax = est + 0.05, group = o
			),
			alpha = 0.25,
			color = "white"
		) +
		ggplot2::geom_line(
			data = dat2,
			mapping = ggplot2::aes(
				x = distance, y = est, color = o
			),
			linewidth = 1.5,
			alpha = 0.85,
			lineend = "round"
		) +
		ggrepel::geom_label_repel(
			data = dat_labs |>
				dplyr::filter(strain_type == 'H3N2', method == i),
			ggplot2::aes(
				x = norm_dist, y = y,
				label = strain_short
			),
			inherit.aes = FALSE,
			min.segment.length = ggplot2::unit(0, 'lines')
		) +
		ggplot2::geom_label(
			data = dat_stats |>
				dplyr::filter(strain == "HK/14", method == i),
			ggplot2::aes(
				x = x, y = y,
				label = lab,
			),
			inherit.aes = FALSE,
			alpha = 0.85
		) +
		ggplot2::facet_wrap(ggplot2::vars(m)) +
		ggplot2::scale_color_manual(values = c("#E69F00", "#56B4E9", "black")) +
		ggplot2::scale_x_continuous(
			limits = c(-0.05, 1.05),
			breaks = seq(0, 1, 0.25),
			expand = ggplot2::expansion(0, 0),
			sec.axis = sec
		) +
		ggplot2::scale_y_continuous(
			limits = c(-4, 10.5),
			breaks = c(-5, 0, 5, 10),
			expand = ggplot2::expansion(0, 0)
		) +
		ggplot2::labs(
			x = "",
			y = NULL,
			color = "Outcome",
			#title = "H1N1-California-2009 (n = 773)"
		) +
		ggplot2::guides(
			color = ggplot2::guide_legend(override.aes = list(alpha = 1, size = 3))
		) +
		ggplot2::theme(
			plot.margin = ggplot2::margin(t = 6, r = 8, b = 6, l = 8)
		)
	
		if (i == "p_epi") {
		p2s <- p2s + ggplot2::labs(
			x = "Normalized distance measure"
		)
	}
	
	p2 <- c(p2, list(p2s))
}

full_p2 <-
	purrr::reduce(p2, `+`) +
	patchwork::plot_layout(guides = "collect", ncol = 3) +
	patchwork::plot_annotation(title = "H3N2-Hong Kong-2014 (n = 583)") &
	ggplot2::theme(legend.position = "none")

leg <- cowplot::get_legend(
	full_p1 + ggplot2::theme(legend.box.margin = ggplot2::margin(t = 12))
)

full_p1 <- full_p1 & ggplot2::theme(legend.position = "none")

overall_p1 <- cowplot::plot_grid(
	full_p1, full_p2, leg,
	rel_heights = c(1, 1, .1),
	ncol = 1
)

ggplot2::ggsave(
	here::here("Andreas-Poster-Plots/p1.png"),
	plot = overall_p1,
	width = 12,
	height = 10
)
```

# Table with values

```{r}
tab <-
	dat_table |>
	dplyr::mutate(
		value = paste0(
			sprintf("%.2f", est)
			# " (", sprintf("%.2f", lwr), ", ",
			# sprintf("%.2f", upr), ")"
		),
		.keep = "unused"
	) |>
	dplyr::filter(
		outcome == "log2 titer ratio",
		name %in% c("AUC (unweighted)", "Intercept", "Slope")
	) |>
	dplyr::mutate(
		name = factor(
			name,
			levels = c("Slope", "Intercept", "AUC (unweighted)"),
			labels = c("Strength", "Breadth", "Total")
		),
	) |>
	dplyr::select(
		-outcome,
		-c(lwr, upr)
	) |>
	tidyr::pivot_wider(
		names_from = method,
		values_from = value,
		names_glue = "Distance measure_{method}"
	) |>
	flextable::flextable() |>
	flextable::merge_v(j = ~subtype + strain) |>
	flextable::valign(j = ~ subtype + strain, valign = "top") |>
	flextable::align(j = 4:6, align = "center") |>
	flextable::separate_header(split = "_") |>
	flextable::autofit()

tab

readr::write_rds(tab, here::here("Andreas-Poster-Plots/table.Rds"))
```

# Long ways table

```{r}
wide_tab <-
	dat_table |>
	dplyr::mutate(
		value = paste0(
			sprintf("%.2f", est)
			# "\n(", sprintf("%.2f", lwr), ", ",
			# sprintf("%.2f", upr), ")"
		),
		.keep = "unused"
	) |>
	dplyr::filter(
		outcome == "log2 titer ratio",
		name %in% c("AUC (unweighted)", "Intercept", "Slope")
	) |>
	dplyr::mutate(
		name = factor(
			name,
			levels = c("Intercept", "Slope", "AUC (unweighted)"),
			labels = c("Strength", "Breadth", "Total"),
			ordered = TRUE
		),
	) |>
	dplyr::arrange(subtype, strain, method, name) |>
	dplyr::select(
		-outcome,
		-c(lwr, upr)
	) |>
	tidyr::pivot_wider(
		names_from = c(subtype, strain),
		values_from = value,
		names_glue = "{subtype}_{strain}"
	) |>
	dplyr::rename(
		" " = name,
		"  " = method,
	) |>
		flextable::flextable() |>
	flextable::merge_v(j = ~ `  `) |>
	flextable::valign(j = ~ `  `, valign = "top") |>
	flextable::separate_header(split = "_") |>
	flextable::vline(j = c(2, 4)) |>
	flextable::align(j = 3:8, align = "center", part = "all") |>
	flextable::padding(padding = 2, part = "all") |>
  flextable::fontsize(size = 16, part = "all") |>
	flextable::autofit()

wide_tab

readr::write_rds(wide_tab, here::here("Andreas-Poster-Plots/wide-table.Rds"))
```

IGNORE EVERYTHING BELOW THIS

MAKE THE SAME FIG AND TAB FOR DOSE DATA

```{r}
p2data <- readr::read_rds(here::here("Andreas-Poster-Plots/p2data.Rds"))
dat_p1 <- p2data[[1]]  |>
	dplyr::filter(outcome == "titerincrease") |>
	dplyr::select(-outcome)

plt_test <- p2data[[2]] |>
	dplyr::mutate(
				o = factor(outcome,
							 levels = c("prevactiter", "postvactiter", "titerincrease"),
							 labels = c("Pre-vaccination titer",
							 					  "Post-vaccination titer",
							 					  "Titer increase")),
	) |>
	dplyr::filter(outcome == "titerincrease") |>
	dplyr::select(-outcome, -o)
dat_table <- p2data[[3]]

dat_labs <-
	dat_p1 |>
	dplyr::filter(
		strain_short %in% c("CA/09", "NC/99", "SC/18", "HK/14", "Shan/93", "TX/77"),
		vac_short %in% c("CA/09", "HK/14")
	) |>
	dplyr::select(
		strain_type,
		strain_short,
		norm_dist,
		distance,
		method
	) |>
	dplyr::distinct() |>
	dplyr::mutate(
		y = -0.25,
		m = factor(
			method,
			levels = c("year", "p_epi", "cart_2d_post"),
			labels = c(
				"Year difference",
				"p-Epitope sequence distance",
				"Antigenic cartography distance"
			)
		)
	)

dat_stats <-
	dat_table |>
	dplyr::filter(
		strain %in% c("CA/09", "HK/14"),
		outcome == "log2 titer ratio",
		name %in% c("Slope", "Intercept", "AUC (unweighted)")
	) |>
	dplyr::mutate(
		m = factor(
			method,
			levels = c("Year difference",
								 "p-Epitope",
								 "Antigenic cartography"),
			labels = c("Year difference",
								 "p-Epitope sequence distance",
								 "Antigenic cartography distance")
		),
		method = factor(
			m,
			levels = c("Year difference",
								 "p-Epitope sequence distance",
								 "Antigenic cartography distance"),
			labels = c("year", "p_epi", "cart_2d_post")
		),
		n = factor(
			name,
			levels = c("Intercept", "Slope", "AUC (unweighted)"),
			labels = c("Strength", "Breadth", "Total"),
			ordered = TRUE
		)
	) |>
	dplyr::select(strain, method, m, n, est, dose) |>
	dplyr::arrange(strain,dose, m, n) |>
	dplyr::mutate(
		lab = paste0(n, ": ", sprintf("%.2f", est)),
		.keep = "unused"
	) |>
	dplyr::group_by(strain, m, method, dose) |>
	dplyr::summarise(
		lab = paste(lab, collapse = "\n"),
		.groups = "drop"
	) |>
	dplyr::mutate(
		x = dplyr::case_when(
			dose == "SD" ~ 0.45,
			dose == "HD" ~ 0.85
		),
		y = 8.25
	)

p1 <- list()

for (i in c("year", "p_epi", "cart_2d_post")) {
	
	dat <-dat_p1 |>
		dplyr::filter(
			method == i, vaccine_fullname == "H1N1-California-2009"
		)
	
	dat2 <-
		plt_test |>
		dplyr::filter(
			method == i, vaccine_fullname == "H1N1-California-2009"
		)
	
	if( i == "p_epi") {
	sec <-
		ggh4x::help_secondary(
			data =dat ,
			primary = norm_dist,
			secondary = distance,
			name = "Original distance measure"
		)
	} else {
			sec <-
		ggh4x::help_secondary(
			data =dat ,
			primary = norm_dist,
			secondary = distance,
			name = NULL
		)
	}
	
	p1s <-
		dat |>
		dplyr::mutate(
			m = factor(
				method,
				levels = c("year", "p_epi", "cart_2d_post"),
				labels = c(
					"Year difference",
					"p-Epitope sequence distance",
					"Antigenic cartography distance"
				)
			)
		) |>
		ggplot2::ggplot() +
		ggplot2::aes(x = norm_dist, y = y, color = dose) +
		ggplot2::geom_point(
			alpha = 0.1,
			size = 0.5,
			position = ggplot2::position_jitter(width = 0.005, height = 0.35, seed = 370)
		) +
		ggplot2::geom_ribbon(
			data = dat2,
			mapping = ggplot2::aes(
				x = distance, y = est, ymin = est - 0.05, ymax = est + 0.05, group = dose
			),
			alpha = 0.25,
			color = "white"
		) +
		ggplot2::geom_line(
			data = dat2,
			mapping = ggplot2::aes(
				x = distance, y = est, color = dose
			),
			linewidth = 1.5,
			alpha = 0.85,
			lineend = "round"
		) +
		ggrepel::geom_label_repel(
			data = dat_labs |>
				dplyr::filter(strain_type == 'H1N1', method == i),
			ggplot2::aes(
				x = norm_dist, y = y,
				label = strain_short
			),
			inherit.aes = FALSE,
			min.segment.length = ggplot2::unit(0, 'lines')
		) +
		ggplot2::geom_label(
			data = dat_stats |>
				dplyr::filter(strain == "CA/09", method == i),
			ggplot2::aes(
				x = x, y = y,
				label = lab,
				color = dose,
			),
			inherit.aes = FALSE,
			alpha = 0.85,
			show.legend = FALSE
		) +
		ggplot2::facet_wrap(ggplot2::vars(m)) +
		ggplot2::scale_color_manual(values = c("#592C88", "#009E73")) +
		ggplot2::scale_x_continuous(
			limits = c(-0.05, 1.05),
			breaks = seq(0, 1, 0.25),
			expand = ggplot2::expansion(0, 0),
			sec.axis = sec
		) +
		ggplot2::scale_y_continuous(
			limits = c(-4, 10.5),
			breaks = c(-5, 0, 5, 10),
			expand = ggplot2::expansion(0, 0)
		) +
		ggplot2::labs(
			x = "",
			y = NULL,
			color = "Outcome",
			#title = "H1N1-California-2009 (n = 773)"
		) +
		ggplot2::guides(
			color = ggplot2::guide_legend(override.aes = list(alpha = 1, size = 3))
		) +
		ggplot2::theme(
			plot.margin = ggplot2::margin(t = 6, r = 8, b = 6, l = 8)
		)
	
	if (i == "p_epi") {
		p1s <- p1s + ggplot2::labs(
			x = "Normalized distance measure"
		)
	}
	
	p1 <- c(p1, list(p1s))
}

full_p1 <-
	purrr::reduce(p1, `+`) +
	patchwork::plot_layout(guides = "collect", ncol = 3)  +
	patchwork::plot_annotation(
		title = "H1N1-California-2009 (SD = 127; HD = 174)"
	)&
	ggplot2::theme(legend.position = "bottom")

p2 <- list()

for (i in c("year", "p_epi", "cart_2d_post")) {
	
	dat <-dat_p1 |>
		dplyr::filter(
			method == i, vaccine_fullname == "H3N2-Hong Kong-2014"
		)
	
	dat2 <-
		plt_test |>
		dplyr::filter(
			method == i, vaccine_fullname == "H3N2-Hong Kong-2014"
		)
	
	if( i == "p_epi") {
	sec <-
		ggh4x::help_secondary(
			data =dat ,
			primary = norm_dist,
			secondary = distance,
			name = "Original distance measure"
		)
	} else {
			sec <-
		ggh4x::help_secondary(
			data =dat ,
			primary = norm_dist,
			secondary = distance,
			name = NULL
		)
	}
	
	p2s <-
		dat |>
		dplyr::mutate(
			m = factor(
				method,
				levels = c("year", "p_epi", "cart_2d_post"),
				labels = c(
					"Year difference",
					"p-Epitope sequence distance",
					"Antigenic cartography distance"
				)
			)
		) |>
		ggplot2::ggplot() +
		ggplot2::aes(x = norm_dist, y = y, color = dose) +
		ggplot2::geom_point(
			alpha = 0.1,
			size = 0.5,
			position = ggplot2::position_jitter(width = 0.005, height = 0.35, seed = 370)
		) +
		ggplot2::geom_ribbon(
			data = dat2,
			mapping = ggplot2::aes(
				x = distance, y = est, ymin = est - 0.05, ymax = est + 0.05, group = dose
			),
			alpha = 0.25,
			color = "white"
		) +
		ggplot2::geom_line(
			data = dat2,
			mapping = ggplot2::aes(
				x = distance, y = est, color = dose
			),
			linewidth = 1.5,
			alpha = 0.85,
			lineend = "round"
		) +
		ggrepel::geom_label_repel(
			data = dat_labs |>
				dplyr::filter(strain_type == 'H3N2', method == i),
			ggplot2::aes(
				x = norm_dist, y = y,
				label = strain_short
			),
			inherit.aes = FALSE,
			min.segment.length = ggplot2::unit(0, 'lines')
		) +
		ggplot2::geom_label(
			data = dat_stats |>
				dplyr::filter(strain == "HK/14", method == i),
			ggplot2::aes(
				x = x, y = y,
				label = lab, color = dose,
			),
			inherit.aes = FALSE,
			alpha = 0.85,
			show.legend = FALSE
		) +
		ggplot2::facet_wrap(ggplot2::vars(m)) +
		ggplot2::scale_color_manual(values = c("#592C88", "#009E73")) +
		ggplot2::scale_x_continuous(
			limits = c(-0.05, 1.05),
			breaks = seq(0, 1, 0.25),
			expand = ggplot2::expansion(0, 0),
			sec.axis = sec
		) +
		ggplot2::scale_y_continuous(
			limits = c(-4, 10.5),
			breaks = c(-5, 0, 5, 10),
			expand = ggplot2::expansion(0, 0)
		) +
		ggplot2::labs(
			x = "",
			y = NULL,
			color = "Outcome",
			#title = "H1N1-California-2009 (n = 773)"
		) +
		ggplot2::guides(
			color = ggplot2::guide_legend(override.aes = list(alpha = 1, size = 3))
		) +
		ggplot2::theme(
			plot.margin = ggplot2::margin(t = 6, r = 8, b = 6, l = 8)
		)
	
		if (i == "p_epi") {
		p2s <- p2s + ggplot2::labs(
			x = "Normalized distance measure"
		)
	}
	
	p2 <- c(p2, list(p2s))
}

full_p2 <-
	purrr::reduce(p2, `+`) +
	patchwork::plot_layout(guides = "collect", ncol = 3) +
	patchwork::plot_annotation(title = "H3N2-Hong Kong-2014 (SD = 56; HD = 93)") &
	ggplot2::theme(legend.position = "none")

leg <- cowplot::get_legend(
	full_p1 + ggplot2::theme(legend.box.margin = ggplot2::margin(t = 12))
)

full_p1 <- full_p1 & ggplot2::theme(legend.position = "none")

overall_p2 <- cowplot::plot_grid(
	full_p1, full_p2, leg,
	rel_heights = c(1, 1, .1),
	ncol = 1
)

ggplot2::ggsave(
	here::here("Andreas-Poster-Plots/p2.png"),
	plot = overall_p2,
	width = 12,
	height = 10
)
```

# Dose wide table

```{r}
dw_tab <-
	dat_table |>
	dplyr::mutate(
		value = paste0(
			sprintf("%.2f", est)
			# "\n(", sprintf("%.2f", lwr), ", ",
			# sprintf("%.2f", upr), ")"
		),
		.keep = "unused"
	) |>
	dplyr::filter(
		outcome == "log2 titer ratio",
		name %in% c("AUC (unweighted)", "Intercept", "Slope")
	) |>
	dplyr::mutate(
		name = factor(
			name,
			levels = c("Intercept", "Slope", "AUC (unweighted)"),
			labels = c("Strength", "Breadth", "Total"),
			ordered = TRUE
		),
	) |>
	dplyr::arrange(subtype, strain, method, name) |>
	dplyr::select(
		-outcome,
		-c(lwr, upr)
	) |>
	tidyr::pivot_wider(
		names_from = c(subtype, strain),
		values_from = value,
		names_glue = "{subtype}_{strain}"
	) |>
	dplyr::rename(
		" " = name,
		"  " = method,
	)

dw_tab_sd <-
	dw_tab |>
	dplyr::filter(dose == "SD") |>
	dplyr::select(-dose) |>
	dplyr::mutate(
		dplyr::across(tidyselect:::where(is.character), as.numeric)
	)

dw_tab_hd <-
	dw_tab |>
	dplyr::filter(dose == "HD") |>
	dplyr::select(-dose) |>
	dplyr::mutate(
		dplyr::across(tidyselect:::where(is.character), as.numeric)
	)

# dw_tab_ratio <- dw_tab_hd
# for (i in 1:9){
# 	for (j in 3:8)
# 		dw_tab_ratio[[i, j]] <-
# 			as.numeric(dw_tab_hd[[i, j]]) /
# 			as.numeric(dw_tab_sd[[i, j]])
# }

#this is difference, but keeping name so i don't have to change rest
dw_tab_ratio <- dw_tab_hd
for (i in 1:9){
	for (j in 3:8)
		dw_tab_ratio[[i, j]] <-
			as.numeric(dw_tab_hd[[i, j]]) - as.numeric(dw_tab_sd[[i, j]])
}


dw_tab_fin <-
dw_tab_ratio |>
		flextable::flextable() |>
	flextable::merge_v(j = ~ `  `) |>
	flextable::valign(j = ~ `  `, valign = "top") |>
	flextable::separate_header(split = "_") |>
	flextable::vline(j = c(2, 4)) |>
	flextable::align(j = 3:8, align = "center", part = "all") |>
	flextable::padding(padding = 2, part = "all") |>
	flextable::colformat_double(j = 3:8, digits = 2) |>
  flextable::fontsize(size = 16, part = "all") |>
	flextable::autofit()

dw_tab_fin

readr::write_rds(dw_tab_fin, here::here("Andreas-Poster-Plots/dose-table.Rds"))
```
